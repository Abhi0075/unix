Q 1.Write a shell script to convert all lowercase to uppercase in a file.
Sol:     echo “Enter the file name to convert”
           read fname
	if [ -f $fname ]
	then
	echo “file exist”
	echo 
	tr “[a-z]””[A-Z]” < $fname
            else
            echo “File not exist”
	Fi


Q 2)Write a shell script that takes a command-line argument and reports on whether it is directory, a file, or something else.

Sol:

echo "enter file"

read str

if test -f $str

then echo "file exists n it is an ordinary file"

elif test -d $str

then echo "directory file"

else

echo "not exists"

fi
Q 3) Write a shell script that deletes all lines containing a specified word in one or more files supplied as arguments to it.

Sol: 
if [ $# -lt 1]

then

echo "Check the arguments once"

exit

fi

echo "Enter a word"

read word

for file in $*

do

grep -iv "$word" $file | tee 1> /dev/null

done

echo "lines containing given word are deleted"





Q 4) Write a shell script to check the existence of the file . check if the file is block special file or not and print number of characters,words and lines .

Sol" ::

#!/ bin / Sh 
echo "Enter the file name "
read fname
if [ -e $fname ]
then
 echo  "$fname exists"
else
echo " $fname doesn't exist"
fi

if [ -b $fname ] 
then
 echo  "$fname is a block special file"
else
echo " $fname is not a block special file"
fi

 c= `cat $fname  | wc -c`
w= `cat $fname  | wc -w`
  l= `grep -c "." $fname`
echo "Number of characters in $fname is $c"
echo "Number of words in $fname is $w"
echo "Number of lines in $fname is $l"


Q 5) Given a file with 1 row and 12 columns, write a shell script to print the 10th, 11th and 12th column element using set command.

#!/bin/sh
#col.txt contains the details with a single line in 12 columns
echo “The file is : ”
set `cat col.txt`
shift 3
echo $7 $8 $9




Q6) Write a shell script to display list of file names having all read, write and execute permission.

Solution:
echo "The name of all files having all permissions :"
# loop through all files in current directory
for file in *
do
# check if it is a file
if [ -f $file ]
then
# check if it has all permissions
if [ -r $file -a -w $file -a -x $file ]
then
# print the complete file name with -l option
ls -l $file
# closing second if statement
fi
# closing first if statement
fi
done

O/P :
-rwxrwxrwx 1 roomie roomie 0 1 Jul 22 23:19 nik.sh
-rwxrwxrwx 1 roomie roomie 0 2 Jul 22 23:19 hil.sh
-rwxrwxrwx 1 roomie roomie 0 3 Jul 22 23:19 bhal.sh
-rwxrwxrwx 1 roomie roomie 0 4 Jul 22 23:19 erao.sh

 


Q7.Write a shell script that accept the file name,starting and ending line number as an argument and display all the lines between the given line number.

       #!/bin/sh
       echo "enter the filename"
       read fname
       echo "enter the starting line number"
       read s
       echo "enter the ending line number"
       read n
       sed -n $s,$n\p $fname | cat > newline
       cat newline

Output:
       enter the filename
       p.txt
       enter the starting line number
       2
       enter the ending line number
       4
       lab
       invalid
       shell



Q8. Assign values to positional parameters using set command , print the values of the parameters and then unset the positional parameters.
 
#!/bin/sh
set apple mango orange guava
echo $1
echo $2
echo $3
echo $4
set --
echo $1
echo $2
echo "Hello"



Q9). Write a shell script to list all the files beginning with a given letter and store them in a file.

Sol). 
#!/bin/sh
echo "Enter the letter:-"
read l
ls $l* > list.txt
echo "The files which start from given letter $l is"
cat list.txt




Q.10) Write a shell script to display the calendar of the users birthday ( given users birth month and birth year print calendar of the respective month and year )

Ans: #!/bin/sh
       echo “Enter the birth month of the user”
       read m
       echo “Enter the birth year of the user”
       read y
       cal $m $y

Output:

“Enter the birth month of the user” 9 
“Enter the birth year of the user” 2002 

September 2002 
Su  Mo  Tu  We  Th   Fr   Sa 
1     2     3     4     5     6     7 
8     9    10   11   12   13   14 
15  16   17   18   19   20   21
22  23   24   25   26   27  28
29  30


Q.11)Write a shell script to sort files according to file size and display the empty files in the directory.

#!/bin/sh
echo "Enter a directory to check file size"
read dir
if[ -d "$dir" ]
then
echo "Directory exists"
for word in `find $dir -size 0`
do
echo $word
echo "Zero sized files are displayed"
done
else
echo "Directory doesn't exist"
fi

OUTPUT:

Enter a directory to check file size
(Read any directory)
Directory exists
./abcd.txt
./mail.txt
./f1.sh
Zero sized files are displayed 





Q.12 Write a shell script program to pause the execution of any command for specified period of time

#!/bin/bash

echo “Wait for 5 seconds”
sleep 5
echo “Completed”

Q.13 write a shell script program to send email 

#!/bin/bash
Recipient=”admin@example.com”
Subject=”Greeting”
Message=”Welcome to our site”
`mail -s $Subject $Recipient <<< $Message`

Q.14  Write a shell script to segregate all .sh files and .txt files of current directory by redirecting them into separate files.

Solution:
 
#!/bin/sh
ls *.txt > text.txt
ls *.sh > script.txt
cat text.txt
cat script.txt









Q.15 Write a Shell Script to execute the comm command and store the output to a file,copy the contents of that file to another file and add the new data to that copied file.

Ans:

#!/bin/sh
comm file1.txt file2.txt >file3.txt
cp file3.txt file4.txt
echo “		File4 is :	“ 
echo 
cat file4.txt
echo “hello” >>file4.txt
echo “		File4 after adding new data		“
echo 
cat file4.txt



Q16. Write a shell script to count the number of matches using grep command.
#!/bin/sh
echo “Enter file name: ”
read filename

echo “Enter pattern: ”
read pattern

grep -c “$pattern” $filename



Q17. Write a shell script to remove the duplicate lines from a file.

	#!/bin/sh
	echo “Enter the file name”
	read file
	echo “The file is”
	cat $file
	sort -u $file > data.txt
	echo  “The file after removing duplicates is”
	cat data.txt




Q18)Write a shell script to join two files horizontally


#!/bin/sh

echo "enter the file name"
read f1 
read f2
echo "the files after joining are"
paste $f1 $f2 > result.txt
cat result.txt






Q.19 Write a shell script to make a directory which contains the files which are deleted using positional parameters.
	
	#!/bin/sh
	if [ -d “deleted” ]
	then
		echo “The directory already exists”
else
mkdir deleted
fi 
cp $1 deleted
rm $1 

Q.20 Write a shell script to open the last edited text file in the current directory.
	
	#!/bin/sh
	vi first_file.txt
	vi second_file.txt
	vi `ls -t | head -1`




21) Write a shell script that accepts a filename as argument and display its creation time 
 if file exist and if it does not send output error message. 
#! /bin/sh
if [ $# -eq 0 ]
then
echo "No argument"
exit
fi
if [ -f $1 ]
then
time=`ls -l $1|cut -c 33-59`
echo "File $1 has created on $time"
else
echo "File $1 does not exist"
fi

22):A shell script to accept a filename as argument and displays the last modification time if the file exists 
and a suitable message if it does not.
#!/bin/sh
echo "Enter name of the file: \c"
read filename
if [ -e $filename ] 
then
echo 'Last modification time is: \c'
echo `ls -l $filename | cut -d " " -f 6,7,8` 
else::Wq
echo "file does not exist"
fi

 23) A shell script to append doc extension to all filenames. 
#!/bin/sh
for file in ch1 ch2 ch3;
do
cp $file ${file}.doc
echo $file copied to $file.doc
done


24) A shell script to accept 2 file names & check if the permission for these files are identical and if they are 
not identical, display each filename followed by permission.
#!/bin/sh
echo "Enter 2 filenames: \c" 
read f1 f2
file1 =`ls -l $f1 | cut -c 2-10` 
file2 =`ls -l $f2 | cut -c 2-10`
 if [ $file1 = $file2 ]
 then
echo "Common file permission: $file1"
else
echo "Different file permissions " 
echo " permission of $f1: $file1" 
echo " permission of $f2: $file2"
fi


Q 25. Write a shell script that displays the message either “good morning”, “good afternoon” or “good evening” depending upon the current time.

#!/bin/sh
date +%R | cut -d " " -f 5 > time.txt
cut -d ":" -f 1 time.txt > hour.txt
h=`cat hour.txt`
if [ $h -lt 12 ]
then
        echo "Good Morning!"
elif [ $h -lt 16 ]
then
        echo "Good Afternoon!"
else
        echo "Good Evening!"
fi



Q 26) Write a shell script to print the content of a file without using cat command

	#!/bin/sh
	echo “Enter the filename”
	read file
	while read line
	do 
		echo $line
	done < $file 




27 Q] Write a shell script to create a directory confirming it's existence.
Solution:
#!/bin/sh
echo " enter the directory name "
read d
if [ -d $d ] 
then 
echo "exists " 
exit 
else
mkdir $d
echo " created "
fi

Q 28.write a shell script file called file properties that read file name entered and output it’s permissions.
#!/bin/sh
x=1
while [ $x -eq 1 ]
do
echo "enter your choice!!"
read ch
echo "your choice is $ch"

case $ch in
1 )echo "file permission    `ls -l $0|cut -d' ' -f1`";;
2 )echo "link info           `ls -l $0|cut -d' ' -f2`";;
3 )echo "owner info        `ls -l $0|cut -d' ' -f3`";;
4 )echo "group info        `ls -l $0|cut -d' ' -f4`";;
5 )echo "size of the file  `ls -l $0|cut -d' ' -f5`";;
6 )echo "month of creation `ls -l $0|cut -d' ' -f6`";;
7 )echo "time                  `ls -l $0|cut -d' ' -f9`";;
8 )echo "file name          `ls -l $0|cut -d' ' -f10`";;
* )echo "invalid choice!!";;
esac
echo "do u want to continue....yes=1 or no =0"
read x
done
   

Q .29) Write shell script to print number of files and directories in the current working directories.

#!/bin/sh
If [ -d  “$@” ]
then 
echo “number of files found : $(find “$@” -type f|wc -l)”
echo “Number of directories found : $(find “$@” -type d|wc -l)”
else
echo “[ERROR] please retry with another directory”
exit 1
fi

Output :
Number of files found :17
Number of directories found :3




Q 30. Write a shell script to display all .txt files and rename them as .temp files.

Sol:-
#!/bin/sh
ls *.txt > file1
for word in ‘file1’
do
  mv $word.txt $word.temp
Done


Q 31)Write a menu driven shell script to display  1.list of current users.2.current user login,3.current date.4)long listing of all files in current directory.5)exit

SOL:
#!/bin/sh
Echo “enter choice”
Read choice
Case $choice in
1)who;;
2)who am i;;
3)date;;
4)ls -l;;
5)exit;;
*)echo “invalid choice”;;
esac


 







Q 32. Write a shell script to display the unique words in a text along with their count.
Ans) !#/bin/sh
        sort animals.txt>animals1.txt
        uniq -c animals1.txt>unique.txt
        cat unique.tx
O/P:
Animals.txt
Bear
Lion
Tiger
Snake
Bear
Snake
Snake 
Elephant
Lion
Lion
Lion

unique.txt:
2 bear
1 elephant
4 lion
3 tiger 
1 snake
 and 




Q. 33. Write a shell script which accepts pathname and displays the total number of files in it.
#!/bin/sh
echo “Enter the path”
read path
echo “The number of files is: \c”
ls  $path|wc -w









Q.34 .Write a shell script to display your current time zone.
#!/bin/sh
Echo "Your current time zone is"
Set `date`
Echo $5
Output:- Your current time zone is
              IST





Q 35 . write a shell script to check if the two files exists or not and if they do then append the contents of those files into a third file
#!/bin/sh
touch ans.txt
if [ -r $1 ]
then
        if [ -r $2 ]
        then
                while read line
                do
                        echo $line >> ans.txt
                done < $1
                echo "\n" >> ans.txt 
                while read line
                do
                        echo $line >> ans.txt
                done < $2
        else
                echo " $2 does not exists "
        fi
else
        echo "$1 does not exists"
Fi

Q 36. Write a shell script to copy all the directories into a particular directory.
#!/bin/sh
ls > file1.txt
mkdir ans 
while  read line
do
    if [ -d $line ]
    then 
          mv $line ans
     fi
done < file1.txt


Q 37 ) Write a shell script to accept directory path as an argument and display the recently modified file in the same.

SOL - 

#!/bin/sh
if [ $# -ne 1 ]
then
        echo "invalid number of arguments"
        exit
else
        cd $1
        set `ls -clt`
        echo " The recently modified file in the given directory is ${11} at ${10} on ${8} - ${9}"
fi



Q 38.Write a shell script to find a file consisting of list of story books and append the name of the new books.

#!/bin/sh
echo enter the file name you are searching for
read file
find $file
if [ $? -eq 0 ]
then 
echo file exists
echo enter the name of new books
cat>>$file
else
echo file does not exist
fi

Output
Enter the file name you are searching for
Story.txt
File exists
Enter the name of news books
A Million Thoughts







Q 39). Write a shell script to check if the user is logged in or not

#!/bin/sh
echo enter the username
read name
who > test
if grep $name test
then 
echo logged in
else
echo not logged in
fi


Output
Enter username
test 
logged in



Q 40) write menu driven shell script program to
	1.show the link count f file
 	2.to show the file size
For given input file using case statement.

Soln:
	#!/bin/sh
	echo “Menu”
	echo  “1.to show the link count of a file”
	echo  “2.to display file size”
	rcho “enter your file”
 	read file
	echo “enter your choice”
	read choice
	if [ -f $file ]
	then
		case $choice in
			1)ls -l $file | cut -d “ “ -f 2 > temp1.txt
			    echo “the count of file is”
			    cat temp1.txt
			    exit ;;
			2)ls -l $file | cut -d “ “ -f 5 > temp2.txt
			    echo “the file size is”
			    cat temp2.txt
			    exit ;;
			*)echo “invalid choice”;;
		esac
	else
		echo “provided file is not regular file”
	fi



Q 41) Write a shell script to move the file with the largest size to a directory provided by the user as a positional parameter.

#!/bin/sh
ls > 1.txt
cat 1.txt |sort -n -k 5 |tail -1 > q.txt
mkdir $1
while read line
do
mv $line $1
done <q.txt



Q42) SHELL SCRIPT TO GET WEEKLY REMINDERS


#!/bin/sh
#weekly reminder  

D=`date | cut -d " " -f 1`

if test $D = "Monday"
then
 echo MONDAY REMINDERS

elif test $D = "Tuesday"
then
 echo TUESDAY REMINDERS

elif test $D = "Wednesday"
then
echo WEDNESDAY REINDERS

elif test $D = "Thursday"
then
echo THURSDAY REMINDERS

elif test $D = "Friday"
then
echo FRIDAY REMINDERS

elif test $D = "Saturday"
then
echo SATURDAY REMINDERS

else
echo SUNDAY REMINDERS
fi	

OUTPUT

SATURDAY REMINDERS



Q 43) 	write a shell script to perform basic operations
#!/bin/sh
a=10
b=20
val=' expr $a + $b'
echo "a + b : sval"
val=' expr $a - $b°
echo "a - b : sval"
val= 'expr $a \* $b
echo "a * b : sval"
val= 'expr $b / sa
echo "b / a: sval"
val=' exor $b % $a
echo "b % a : sval"
if [ $a == $b 1
then
echo "a is equal to b"
fi
if [ $a != $b ]
then
echo "a is not equal to b"
fi


 Q 44)  write a shell script to display current data time, username and directory

#!/bin/sh

#
echo "Hello, $LOGNAME"
echo "Current date is `date`"
echo "User is `whoami`"
echo "Current direcotry `pwd`"


45) Write a shell script to read a filename and check if it is a regular file or not and if it is a regular file then display the number of lines, words and characters it contains.
#!/bin/sh
echo " enter the file name"
read filename
if [ -f $filename ]
then 
echo "it is a regular file"
echo " the number of lines:"
wc -l $filename
echo "the number of words:"
wc -w $filename
echo "the number of characters:"
wc -c $filename
else 
echo "it is not a regular file"
fi



46) write a shell script to demonstrate positional parameters

#!/bin/sh
echo positional parameters
echo first argument is \$1 $1
echo second argument is \$2 $2
echo number of arguments are \$\# $#
echo arguments are \$* $*
echo Process ID of current shell \$\$ is $$



47) Write a shell script to find length of string

#!/bin/sh
echo "Enter string"
read str
len=`echo -n "$str" | wc-c`
echo "length of $str = $len"



48)Write a shell script to display the current date and time

#!/bin/sh
Year=$(date +"%Y")
Month=$(date +"%m")
Day=$(date +"%d")
Hour=$(date +"%H")
Minute=$(date +"%M")
Second=$(date +"%S")
echo `date`
echo " Current date: $Day-$Month-$Year"
echo " Current time: $Hour:$Minute:$Second"



Output:
Saturday 02 July 2022 01:11:14 PM IST
 Current date: 02-07-2022
 Current time: 13:11:14

 






49)write a shell script to print number of lines of all text files along with
their names and path from home directory, of a given directory.

#!/bin/sh
FILES=path/*.txt
for f in $FILES
do
wc -l $f
done


Q50)Write a shell program to create a directory which contains all files whose names have only alphabets without any numbers

#!/bin/sh
ls>ff.txt
mkdir d2
grep -v [0-9] ff.txt >fff.txt
for word in `cat fff.txt`
do
cp $word d2
done


Q51) Write a shell script program to copy file 1 to file 2 and create a backup of file 2

#!/bin/sh
echo " enter file 1 and file 2"
read f1
read f2
cp -b $f1 $f2
echo " file 1 copied to file 2 with backup"




Q52)Write a menu driven shell programe:
               1.to append the given file to another file
               2.to override and copy the given file to another file
               3.exit

echo 'menu'
echo 1.append
echo 2.copy
echo 3.exit
echo enter your choice
read choice
echo enter the file names
read f1
read f2
case $choice in
1 ) cat $f1>>$f2 ;;
2 ) cp $f1 $f2 ;;
3 ) exit ;;
* ) echo invalid input;;
esac


Q53) write a shell script to check whether the file(f1) is regular ar linked or directory file and check whether the given file(f1) is new or old or linked to another given file

	#!/bin/sh
	echo “Enter the filenames”
	read f1 f2
	If [ -f $f1 ]
	then 
		echo “The file is regular”
	elif [ -d $f1 ]
	then 
		echo “The file is directory file”
	elif [ -l $f1 ]
	then 
		echo “The file is linked”
	else
		echo “The file is of invalid type”
	fi
	if [ $f1 -nt $f2 ]
	then 
		echo “File 1 is newer”
	else 
		echo “File 1 is older”
	fi
	if [ $f1 -lt $f2 ]
	then 
		echo “File 1 is linked with File 2”
	fi

	



Q.54) write a shell script to display last 10 commands executed by the user.

#!/bin/sh
echo "last 10 commands are  "
history | tail

Output
$source file.sh

date
cal
whoami
who
ls
ls -a
ls -l
vi file.sh
source file.sh
source file.sh


Q 55) Write a shell script to display the digits which are in odd position in a given 5 digit number
 
#!/bin/sh
echo "Enter a 5 digit number"
read num 
n=1
while [ $n -le 5 ] 
do
a=`echo $num | cut -c $n`
 echo $a
n=$(($n+2)) 
done

Output:
Enter a 5 digit number
12345

1
3
5

56) Write a shell script to check if the file exists.
#!/bin/sh
filename=$1
if [ -f "$filename" ]; then
echo "File exists"
else
echo "File does not exist"
fi 

57)Write a shell script which get executed only one time.
#!/bin/sh
echo "hello world!"
chmod 000 filename.sh

Output 
sh filename.sh
Hello world!
sh filename sh
Can't open filename.sh

Q.58)Write a shell script to count only files we own

#!/bin/bash
# counting the number of lines in a list of files
# for loop over argument
# count only those files i am owner of

if [$# -lt 1 ]
then
  echo "Usage: $0 file …."
exit 1
fi

echo "$0 counts the lines of codes"
l=0
n=0
s=0
for f in $*
do
  if [ -0 $f ] # checks whether file owner is running the script
then
        l=`wc  -l $f | sed 's/^\( [0-9]*\).*$/\1/' `
echo "$f : + $1"
n=$ [  $n +1  ]
s=$ [  $s +$1  ]
else
       Continue
fi
done

echo "$n files in total, with $s lines in total"
